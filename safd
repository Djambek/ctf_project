[1mdiff --git a/main.py b/main.py[m
[1mindex 87db2c5..5feb5d1 100644[m
[1m--- a/main.py[m
[1m+++ b/main.py[m
[36m@@ -1,6 +1,10 @@[m
 import socket[m
[32m+[m[32mfrom threading import Thread[m[41m [m
[32m+[m[32mfrom db import *[m
[32m+[m[32mimport random, string[m
[32m+[m
 HOST = socket.gethostname()[m
[31m-PORT = 5001[m
[32m+[m[32mPORT = 5002[m
 server_socket = socket.socket()  # get instance[m
 # look closely. The bind() function takes tuple as argument[m
 server_socket.bind((HOST, PORT))  # bind host address and port together[m
[36m@@ -8,6 +12,10 @@[m [mserver_socket.bind((HOST, PORT))  # bind host address and port together[m
 # configure how many client the server can listen simultaneously[m
 server_socket.listen(8)[m
 [m
[32m+[m[32mdef print_board(conn):[m
[32m+[m[32m    conn.send("\r\n---------------------------------\r\n".encode())[m
[32m+[m
[32m+[m
 def check_user_input(conn, args, message_error):[m
     while 1:[m
         user_input = conn.recv(1024).decode()[m
[36m@@ -22,16 +30,64 @@[m [mdef say_hello(conn):[m
     conn.send(data.encode())[m
     return check_user_input(conn, [["1\n", sign_in, conn], ["2\n", register, conn]], "Your input is invalid, try again!\r\nInput: ")[m
             [m
[31m-          [m
[32m+[m
 [m
 def sign_in(conn):[m
[31m-    data = "Please enter your token. If you want go back enter q\r\nInput:"[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    data = "Please enter your token. If you want go back enter q\r\nInput: "[m
[32m+[m[32m    conn.send(data.encode())[m
[32m+[m[32m    while 1:[m
[32m+[m[32m        user_input = conn.recv(1024).decode().replace("\n", "")[m
[32m+[m[32m        if user_input == 'q':[m
[32m+[m[32m            return say_hello(conn)[m
[32m+[m[32m        elif check_token(user_input):[m
[32m+[m[32m            return main_page(conn, user_input)[m
[32m+[m[41m        [m
[32m+[m[32m        conn.send("Token is invalid or you didn't create notes and token removed. Enter your token, if you want go back enter q\r\nInput: ".encode())[m
[32m+[m
[32m+[m[32mdef main_page(conn, token):[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    data = "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–µ–ª–∞—Ç—å?\r\n\n1) –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏\r\n2) –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É\r\n–ù–∞–∂–º–∏—Ç–µ q –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è!\r\n–í–≤–æ–¥: "[m
[32m+[m[32m    conn.send(data.encode())[m
[32m+[m[32m    return check_user_input(conn, [["1\n", all_notes, conn, token], ["2\n", create_new_note, conn, token], ['q\n', sign_in, conn]], "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–¥—É–º–∞–π—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞\r\n–í–≤–æ–¥: ")[m
[32m+[m
[32m+[m[32mdef all_notes(conn, token):[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    print(get_files(token))[m
[32m+[m[32m    els = get_files(token)[m
[32m+[m[32m    data = "–í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏:\r\n"[m
[32m+[m[32m    for ind, el in enumerate(els):[m
[32m+[m[32m        data += f"\t{ind+1})" + el[0]+"\r\n"[m
[32m+[m[32m    data += "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –µ–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–∞–¥, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ q\r\n–í–≤–æ–¥: "[m
     conn.send(data.encode())[m
     conn.close()[m
[32m+[m
[32m+[m[32mdef view_note(conn, path):[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    data = open(path, "r").read()[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32mdef create_new_note(conn, token):[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    conn.send("Push your wish in your ass")[m
[32m+[m[32m    conn.close()[m
[32m+[m
[32m+[m[32mdef generate_token(lenght):[m
[32m+[m[32m    lett = string.ascii_lowercase + string.ascii_uppercase + "1234567890!@#$%^&*()"[m
[32m+[m[32m    return "".join(random.choice(lett) for i in range(lenght))[m
[32m+[m
 def register(conn):[m
[31m-    data = "You most copy and save your token, if you lose it your notes will be deleted!"[m
[32m+[m[32m    print_board(conn)[m
[32m+[m[32m    token = generate_token(64)[m
[32m+[m[32m    data = f"You most copy and save your token, if you lose it your notes will be deleted!\r\n–í–∞—à —Ç–æ–∫–µ–Ω: {token}"[m
     conn.send(data.encode())[m
[31m-    conn.close()[m
[32m+[m[32m    return main_page(conn, token)[m
[32m+[m
[32m+[m
 while True:[m
     conn, address = server_socket.accept()  # accept new connection[m
[31m-    say_hello(conn)[m
[32m+[m[32m    t = Thread(target=say_hello, args=(conn,))[m
[32m+[m[32m    t.start()[m
[32m+[m[32m    # thread.start_new_thread(say_hello, (conn,))[m
[32m+[m[41m    [m
[32m+[m[32mserver_socket.close()[m
